# coding: utf-8

"""
    hcOS Developer Experience

    hcOS Developer Experience API  # noqa: E501

    OpenAPI spec version: 2.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
from hcos_client.models.data_format import DataFormat  # noqa: F401,E501
from hcos_client.models.data_precedence import DataPrecedence  # noqa: F401,E501
from hcos_client.models.data_status import DataStatus  # noqa: F401,E501
from hcos_client.models.document_status import DocumentStatus  # noqa: F401,E501
from hcos_client.models.person import Person  # noqa: F401,E501


class DocumentMeta(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'root': 'str',
        'extension': 'str',
        'extension_suffix': 'str',
        'updated_at': 'datetime',
        'created_at': 'datetime',
        'date_of_service': 'str',
        'received_in_repository_at': 'str',
        'data_format': 'DataFormat',
        'data_status': 'DataStatus',
        'data_precedence': 'DataPrecedence',
        'patient_root': 'str',
        'patient_extension': 'str',
        'document_root': 'str',
        'document_extension': 'str',
        'document_status': 'DocumentStatus',
        'document_type_root': 'str',
        'document_type_extension': 'str',
        'document_type_description': 'str',
        'baseline_document_type_root': 'str',
        'baseline_document_type_extension': 'str',
        'baseline_document_type_description': 'str',
        'document_type_of_service_root': 'str',
        'document_type_of_service_extension': 'str',
        'document_type_of_service_description': 'str',
        'document_kind_of_document_root': 'str',
        'document_kind_of_document_extension': 'str',
        'document_subject_matter_domain_root': 'str',
        'document_subject_matter_domain_extension': 'str',
        'facility_root': 'str',
        'facility_extension': 'str',
        'facility_baseline_root': 'str',
        'facility_baseline_extension': 'str',
        'visit_root': 'str',
        'visit_extension': 'str',
        'provider': 'str',
        'document_admitting_person': 'list[Person]',
        'document_attending_person': 'list[Person]',
        'document_authenticating_person': 'list[Person]',
        'document_authoring_person': 'list[Person]',
        'document_consulting_person': 'list[Person]',
        'document_interpreting_person': 'list[Person]',
        'document_ordering_person': 'list[Person]',
        'document_performing_person': 'list[Person]',
        'document_receiving_person': 'list[Person]',
        'document_referring_person': 'list[Person]',
        'document_transcribing_person': 'list[Person]',
        'document_unknown_person': 'list[Person]',
        'visit_admitting_person': 'list[Person]',
        'visit_attending_person': 'list[Person]',
        'visit_authenticating_person': 'list[Person]',
        'visit_authoring_person': 'list[Person]',
        'visit_consulting_person': 'list[Person]',
        'visit_interpreting_person': 'list[Person]',
        'visit_ordering_person': 'list[Person]',
        'visit_performing_person': 'list[Person]',
        'visit_receiving_person': 'list[Person]',
        'visit_referring_person': 'list[Person]',
        'visit_transcribing_person': 'list[Person]',
        'visit_unknown_person': 'list[Person]'
    }

    attribute_map = {
        'id': 'id',
        'root': 'root',
        'extension': 'extension',
        'extension_suffix': 'extension_suffix',
        'updated_at': 'updated_at',
        'created_at': 'created_at',
        'date_of_service': 'date_of_service',
        'received_in_repository_at': 'received_in_repository_at',
        'data_format': 'data_format',
        'data_status': 'data_status',
        'data_precedence': 'data_precedence',
        'patient_root': 'patient_root',
        'patient_extension': 'patient_extension',
        'document_root': 'document_root',
        'document_extension': 'document_extension',
        'document_status': 'document_status',
        'document_type_root': 'document_type_root',
        'document_type_extension': 'document_type_extension',
        'document_type_description': 'document_type_description',
        'baseline_document_type_root': 'baseline_document_type_root',
        'baseline_document_type_extension': 'baseline_document_type_extension',
        'baseline_document_type_description': 'baseline_document_type_description',
        'document_type_of_service_root': 'document_type_of_service_root',
        'document_type_of_service_extension': 'document_type_of_service_extension',
        'document_type_of_service_description': 'document_type_of_service_description',
        'document_kind_of_document_root': 'document_kind_of_document_root',
        'document_kind_of_document_extension': 'document_kind_of_document_extension',
        'document_subject_matter_domain_root': 'document_subject_matter_domain_root',
        'document_subject_matter_domain_extension': 'document_subject_matter_domain_extension',
        'facility_root': 'facility_root',
        'facility_extension': 'facility_extension',
        'facility_baseline_root': 'facility_baseline_root',
        'facility_baseline_extension': 'facility_baseline_extension',
        'visit_root': 'visit_root',
        'visit_extension': 'visit_extension',
        'provider': 'provider',
        'document_admitting_person': 'document_admitting_person',
        'document_attending_person': 'document_attending_person',
        'document_authenticating_person': 'document_authenticating_person',
        'document_authoring_person': 'document_authoring_person',
        'document_consulting_person': 'document_consulting_person',
        'document_interpreting_person': 'document_interpreting_person',
        'document_ordering_person': 'document_ordering_person',
        'document_performing_person': 'document_performing_person',
        'document_receiving_person': 'document_receiving_person',
        'document_referring_person': 'document_referring_person',
        'document_transcribing_person': 'document_transcribing_person',
        'document_unknown_person': 'document_unknown_person',
        'visit_admitting_person': 'visit_admitting_person',
        'visit_attending_person': 'visit_attending_person',
        'visit_authenticating_person': 'visit_authenticating_person',
        'visit_authoring_person': 'visit_authoring_person',
        'visit_consulting_person': 'visit_consulting_person',
        'visit_interpreting_person': 'visit_interpreting_person',
        'visit_ordering_person': 'visit_ordering_person',
        'visit_performing_person': 'visit_performing_person',
        'visit_receiving_person': 'visit_receiving_person',
        'visit_referring_person': 'visit_referring_person',
        'visit_transcribing_person': 'visit_transcribing_person',
        'visit_unknown_person': 'visit_unknown_person'
    }

    def __init__(self, id=None, root=None, extension=None, extension_suffix=None, updated_at=None, created_at=None, date_of_service=None, received_in_repository_at=None, data_format=None, data_status=None, data_precedence=None, patient_root=None, patient_extension=None, document_root=None, document_extension=None, document_status=None, document_type_root=None, document_type_extension=None, document_type_description=None, baseline_document_type_root=None, baseline_document_type_extension=None, baseline_document_type_description=None, document_type_of_service_root=None, document_type_of_service_extension=None, document_type_of_service_description=None, document_kind_of_document_root=None, document_kind_of_document_extension=None, document_subject_matter_domain_root=None, document_subject_matter_domain_extension=None, facility_root=None, facility_extension=None, facility_baseline_root=None, facility_baseline_extension=None, visit_root=None, visit_extension=None, provider=None, document_admitting_person=None, document_attending_person=None, document_authenticating_person=None, document_authoring_person=None, document_consulting_person=None, document_interpreting_person=None, document_ordering_person=None, document_performing_person=None, document_receiving_person=None, document_referring_person=None, document_transcribing_person=None, document_unknown_person=None, visit_admitting_person=None, visit_attending_person=None, visit_authenticating_person=None, visit_authoring_person=None, visit_consulting_person=None, visit_interpreting_person=None, visit_ordering_person=None, visit_performing_person=None, visit_receiving_person=None, visit_referring_person=None, visit_transcribing_person=None, visit_unknown_person=None):  # noqa: E501
        """DocumentMeta - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._root = None
        self._extension = None
        self._extension_suffix = None
        self._updated_at = None
        self._created_at = None
        self._date_of_service = None
        self._received_in_repository_at = None
        self._data_format = None
        self._data_status = None
        self._data_precedence = None
        self._patient_root = None
        self._patient_extension = None
        self._document_root = None
        self._document_extension = None
        self._document_status = None
        self._document_type_root = None
        self._document_type_extension = None
        self._document_type_description = None
        self._baseline_document_type_root = None
        self._baseline_document_type_extension = None
        self._baseline_document_type_description = None
        self._document_type_of_service_root = None
        self._document_type_of_service_extension = None
        self._document_type_of_service_description = None
        self._document_kind_of_document_root = None
        self._document_kind_of_document_extension = None
        self._document_subject_matter_domain_root = None
        self._document_subject_matter_domain_extension = None
        self._facility_root = None
        self._facility_extension = None
        self._facility_baseline_root = None
        self._facility_baseline_extension = None
        self._visit_root = None
        self._visit_extension = None
        self._provider = None
        self._document_admitting_person = None
        self._document_attending_person = None
        self._document_authenticating_person = None
        self._document_authoring_person = None
        self._document_consulting_person = None
        self._document_interpreting_person = None
        self._document_ordering_person = None
        self._document_performing_person = None
        self._document_receiving_person = None
        self._document_referring_person = None
        self._document_transcribing_person = None
        self._document_unknown_person = None
        self._visit_admitting_person = None
        self._visit_attending_person = None
        self._visit_authenticating_person = None
        self._visit_authoring_person = None
        self._visit_consulting_person = None
        self._visit_interpreting_person = None
        self._visit_ordering_person = None
        self._visit_performing_person = None
        self._visit_receiving_person = None
        self._visit_referring_person = None
        self._visit_transcribing_person = None
        self._visit_unknown_person = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if root is not None:
            self.root = root
        if extension is not None:
            self.extension = extension
        if extension_suffix is not None:
            self.extension_suffix = extension_suffix
        if updated_at is not None:
            self.updated_at = updated_at
        if created_at is not None:
            self.created_at = created_at
        if date_of_service is not None:
            self.date_of_service = date_of_service
        if received_in_repository_at is not None:
            self.received_in_repository_at = received_in_repository_at
        if data_format is not None:
            self.data_format = data_format
        if data_status is not None:
            self.data_status = data_status
        if data_precedence is not None:
            self.data_precedence = data_precedence
        if patient_root is not None:
            self.patient_root = patient_root
        if patient_extension is not None:
            self.patient_extension = patient_extension
        if document_root is not None:
            self.document_root = document_root
        if document_extension is not None:
            self.document_extension = document_extension
        if document_status is not None:
            self.document_status = document_status
        if document_type_root is not None:
            self.document_type_root = document_type_root
        if document_type_extension is not None:
            self.document_type_extension = document_type_extension
        if document_type_description is not None:
            self.document_type_description = document_type_description
        if baseline_document_type_root is not None:
            self.baseline_document_type_root = baseline_document_type_root
        if baseline_document_type_extension is not None:
            self.baseline_document_type_extension = baseline_document_type_extension
        if baseline_document_type_description is not None:
            self.baseline_document_type_description = baseline_document_type_description
        if document_type_of_service_root is not None:
            self.document_type_of_service_root = document_type_of_service_root
        if document_type_of_service_extension is not None:
            self.document_type_of_service_extension = document_type_of_service_extension
        if document_type_of_service_description is not None:
            self.document_type_of_service_description = document_type_of_service_description
        if document_kind_of_document_root is not None:
            self.document_kind_of_document_root = document_kind_of_document_root
        if document_kind_of_document_extension is not None:
            self.document_kind_of_document_extension = document_kind_of_document_extension
        if document_subject_matter_domain_root is not None:
            self.document_subject_matter_domain_root = document_subject_matter_domain_root
        if document_subject_matter_domain_extension is not None:
            self.document_subject_matter_domain_extension = document_subject_matter_domain_extension
        if facility_root is not None:
            self.facility_root = facility_root
        if facility_extension is not None:
            self.facility_extension = facility_extension
        if facility_baseline_root is not None:
            self.facility_baseline_root = facility_baseline_root
        if facility_baseline_extension is not None:
            self.facility_baseline_extension = facility_baseline_extension
        if visit_root is not None:
            self.visit_root = visit_root
        if visit_extension is not None:
            self.visit_extension = visit_extension
        if provider is not None:
            self.provider = provider
        if document_admitting_person is not None:
            self.document_admitting_person = document_admitting_person
        if document_attending_person is not None:
            self.document_attending_person = document_attending_person
        if document_authenticating_person is not None:
            self.document_authenticating_person = document_authenticating_person
        if document_authoring_person is not None:
            self.document_authoring_person = document_authoring_person
        if document_consulting_person is not None:
            self.document_consulting_person = document_consulting_person
        if document_interpreting_person is not None:
            self.document_interpreting_person = document_interpreting_person
        if document_ordering_person is not None:
            self.document_ordering_person = document_ordering_person
        if document_performing_person is not None:
            self.document_performing_person = document_performing_person
        if document_receiving_person is not None:
            self.document_receiving_person = document_receiving_person
        if document_referring_person is not None:
            self.document_referring_person = document_referring_person
        if document_transcribing_person is not None:
            self.document_transcribing_person = document_transcribing_person
        if document_unknown_person is not None:
            self.document_unknown_person = document_unknown_person
        if visit_admitting_person is not None:
            self.visit_admitting_person = visit_admitting_person
        if visit_attending_person is not None:
            self.visit_attending_person = visit_attending_person
        if visit_authenticating_person is not None:
            self.visit_authenticating_person = visit_authenticating_person
        if visit_authoring_person is not None:
            self.visit_authoring_person = visit_authoring_person
        if visit_consulting_person is not None:
            self.visit_consulting_person = visit_consulting_person
        if visit_interpreting_person is not None:
            self.visit_interpreting_person = visit_interpreting_person
        if visit_ordering_person is not None:
            self.visit_ordering_person = visit_ordering_person
        if visit_performing_person is not None:
            self.visit_performing_person = visit_performing_person
        if visit_receiving_person is not None:
            self.visit_receiving_person = visit_receiving_person
        if visit_referring_person is not None:
            self.visit_referring_person = visit_referring_person
        if visit_transcribing_person is not None:
            self.visit_transcribing_person = visit_transcribing_person
        if visit_unknown_person is not None:
            self.visit_unknown_person = visit_unknown_person

    @property
    def id(self):
        """Gets the id of this DocumentMeta.  # noqa: E501


        :return: The id of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentMeta.


        :param id: The id of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def root(self):
        """Gets the root of this DocumentMeta.  # noqa: E501


        :return: The root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._root

    @root.setter
    def root(self, root):
        """Sets the root of this DocumentMeta.


        :param root: The root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._root = root

    @property
    def extension(self):
        """Gets the extension of this DocumentMeta.  # noqa: E501


        :return: The extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this DocumentMeta.


        :param extension: The extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._extension = extension

    @property
    def extension_suffix(self):
        """Gets the extension_suffix of this DocumentMeta.  # noqa: E501


        :return: The extension_suffix of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._extension_suffix

    @extension_suffix.setter
    def extension_suffix(self, extension_suffix):
        """Sets the extension_suffix of this DocumentMeta.


        :param extension_suffix: The extension_suffix of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._extension_suffix = extension_suffix

    @property
    def updated_at(self):
        """Gets the updated_at of this DocumentMeta.  # noqa: E501


        :return: The updated_at of this DocumentMeta.  # noqa: E501
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this DocumentMeta.


        :param updated_at: The updated_at of this DocumentMeta.  # noqa: E501
        :type: datetime
        """

        self._updated_at = updated_at

    @property
    def created_at(self):
        """Gets the created_at of this DocumentMeta.  # noqa: E501


        :return: The created_at of this DocumentMeta.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this DocumentMeta.


        :param created_at: The created_at of this DocumentMeta.  # noqa: E501
        :type: datetime
        """

        self._created_at = created_at

    @property
    def date_of_service(self):
        """Gets the date_of_service of this DocumentMeta.  # noqa: E501


        :return: The date_of_service of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._date_of_service

    @date_of_service.setter
    def date_of_service(self, date_of_service):
        """Sets the date_of_service of this DocumentMeta.


        :param date_of_service: The date_of_service of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._date_of_service = date_of_service

    @property
    def received_in_repository_at(self):
        """Gets the received_in_repository_at of this DocumentMeta.  # noqa: E501


        :return: The received_in_repository_at of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._received_in_repository_at

    @received_in_repository_at.setter
    def received_in_repository_at(self, received_in_repository_at):
        """Sets the received_in_repository_at of this DocumentMeta.


        :param received_in_repository_at: The received_in_repository_at of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._received_in_repository_at = received_in_repository_at

    @property
    def data_format(self):
        """Gets the data_format of this DocumentMeta.  # noqa: E501


        :return: The data_format of this DocumentMeta.  # noqa: E501
        :rtype: DataFormat
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this DocumentMeta.


        :param data_format: The data_format of this DocumentMeta.  # noqa: E501
        :type: DataFormat
        """

        self._data_format = data_format

    @property
    def data_status(self):
        """Gets the data_status of this DocumentMeta.  # noqa: E501


        :return: The data_status of this DocumentMeta.  # noqa: E501
        :rtype: DataStatus
        """
        return self._data_status

    @data_status.setter
    def data_status(self, data_status):
        """Sets the data_status of this DocumentMeta.


        :param data_status: The data_status of this DocumentMeta.  # noqa: E501
        :type: DataStatus
        """

        self._data_status = data_status

    @property
    def data_precedence(self):
        """Gets the data_precedence of this DocumentMeta.  # noqa: E501


        :return: The data_precedence of this DocumentMeta.  # noqa: E501
        :rtype: DataPrecedence
        """
        return self._data_precedence

    @data_precedence.setter
    def data_precedence(self, data_precedence):
        """Sets the data_precedence of this DocumentMeta.


        :param data_precedence: The data_precedence of this DocumentMeta.  # noqa: E501
        :type: DataPrecedence
        """

        self._data_precedence = data_precedence

    @property
    def patient_root(self):
        """Gets the patient_root of this DocumentMeta.  # noqa: E501


        :return: The patient_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._patient_root

    @patient_root.setter
    def patient_root(self, patient_root):
        """Sets the patient_root of this DocumentMeta.


        :param patient_root: The patient_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._patient_root = patient_root

    @property
    def patient_extension(self):
        """Gets the patient_extension of this DocumentMeta.  # noqa: E501


        :return: The patient_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._patient_extension

    @patient_extension.setter
    def patient_extension(self, patient_extension):
        """Sets the patient_extension of this DocumentMeta.


        :param patient_extension: The patient_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._patient_extension = patient_extension

    @property
    def document_root(self):
        """Gets the document_root of this DocumentMeta.  # noqa: E501


        :return: The document_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_root

    @document_root.setter
    def document_root(self, document_root):
        """Sets the document_root of this DocumentMeta.


        :param document_root: The document_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_root = document_root

    @property
    def document_extension(self):
        """Gets the document_extension of this DocumentMeta.  # noqa: E501


        :return: The document_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_extension

    @document_extension.setter
    def document_extension(self, document_extension):
        """Sets the document_extension of this DocumentMeta.


        :param document_extension: The document_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_extension = document_extension

    @property
    def document_status(self):
        """Gets the document_status of this DocumentMeta.  # noqa: E501


        :return: The document_status of this DocumentMeta.  # noqa: E501
        :rtype: DocumentStatus
        """
        return self._document_status

    @document_status.setter
    def document_status(self, document_status):
        """Sets the document_status of this DocumentMeta.


        :param document_status: The document_status of this DocumentMeta.  # noqa: E501
        :type: DocumentStatus
        """

        self._document_status = document_status

    @property
    def document_type_root(self):
        """Gets the document_type_root of this DocumentMeta.  # noqa: E501


        :return: The document_type_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_root

    @document_type_root.setter
    def document_type_root(self, document_type_root):
        """Sets the document_type_root of this DocumentMeta.


        :param document_type_root: The document_type_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_root = document_type_root

    @property
    def document_type_extension(self):
        """Gets the document_type_extension of this DocumentMeta.  # noqa: E501


        :return: The document_type_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_extension

    @document_type_extension.setter
    def document_type_extension(self, document_type_extension):
        """Sets the document_type_extension of this DocumentMeta.


        :param document_type_extension: The document_type_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_extension = document_type_extension

    @property
    def document_type_description(self):
        """Gets the document_type_description of this DocumentMeta.  # noqa: E501


        :return: The document_type_description of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_description

    @document_type_description.setter
    def document_type_description(self, document_type_description):
        """Sets the document_type_description of this DocumentMeta.


        :param document_type_description: The document_type_description of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_description = document_type_description

    @property
    def baseline_document_type_root(self):
        """Gets the baseline_document_type_root of this DocumentMeta.  # noqa: E501


        :return: The baseline_document_type_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._baseline_document_type_root

    @baseline_document_type_root.setter
    def baseline_document_type_root(self, baseline_document_type_root):
        """Sets the baseline_document_type_root of this DocumentMeta.


        :param baseline_document_type_root: The baseline_document_type_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._baseline_document_type_root = baseline_document_type_root

    @property
    def baseline_document_type_extension(self):
        """Gets the baseline_document_type_extension of this DocumentMeta.  # noqa: E501


        :return: The baseline_document_type_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._baseline_document_type_extension

    @baseline_document_type_extension.setter
    def baseline_document_type_extension(self, baseline_document_type_extension):
        """Sets the baseline_document_type_extension of this DocumentMeta.


        :param baseline_document_type_extension: The baseline_document_type_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._baseline_document_type_extension = baseline_document_type_extension

    @property
    def baseline_document_type_description(self):
        """Gets the baseline_document_type_description of this DocumentMeta.  # noqa: E501


        :return: The baseline_document_type_description of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._baseline_document_type_description

    @baseline_document_type_description.setter
    def baseline_document_type_description(self, baseline_document_type_description):
        """Sets the baseline_document_type_description of this DocumentMeta.


        :param baseline_document_type_description: The baseline_document_type_description of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._baseline_document_type_description = baseline_document_type_description

    @property
    def document_type_of_service_root(self):
        """Gets the document_type_of_service_root of this DocumentMeta.  # noqa: E501


        :return: The document_type_of_service_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_of_service_root

    @document_type_of_service_root.setter
    def document_type_of_service_root(self, document_type_of_service_root):
        """Sets the document_type_of_service_root of this DocumentMeta.


        :param document_type_of_service_root: The document_type_of_service_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_of_service_root = document_type_of_service_root

    @property
    def document_type_of_service_extension(self):
        """Gets the document_type_of_service_extension of this DocumentMeta.  # noqa: E501


        :return: The document_type_of_service_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_of_service_extension

    @document_type_of_service_extension.setter
    def document_type_of_service_extension(self, document_type_of_service_extension):
        """Sets the document_type_of_service_extension of this DocumentMeta.


        :param document_type_of_service_extension: The document_type_of_service_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_of_service_extension = document_type_of_service_extension

    @property
    def document_type_of_service_description(self):
        """Gets the document_type_of_service_description of this DocumentMeta.  # noqa: E501


        :return: The document_type_of_service_description of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_type_of_service_description

    @document_type_of_service_description.setter
    def document_type_of_service_description(self, document_type_of_service_description):
        """Sets the document_type_of_service_description of this DocumentMeta.


        :param document_type_of_service_description: The document_type_of_service_description of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_type_of_service_description = document_type_of_service_description

    @property
    def document_kind_of_document_root(self):
        """Gets the document_kind_of_document_root of this DocumentMeta.  # noqa: E501


        :return: The document_kind_of_document_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_kind_of_document_root

    @document_kind_of_document_root.setter
    def document_kind_of_document_root(self, document_kind_of_document_root):
        """Sets the document_kind_of_document_root of this DocumentMeta.


        :param document_kind_of_document_root: The document_kind_of_document_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_kind_of_document_root = document_kind_of_document_root

    @property
    def document_kind_of_document_extension(self):
        """Gets the document_kind_of_document_extension of this DocumentMeta.  # noqa: E501


        :return: The document_kind_of_document_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_kind_of_document_extension

    @document_kind_of_document_extension.setter
    def document_kind_of_document_extension(self, document_kind_of_document_extension):
        """Sets the document_kind_of_document_extension of this DocumentMeta.


        :param document_kind_of_document_extension: The document_kind_of_document_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_kind_of_document_extension = document_kind_of_document_extension

    @property
    def document_subject_matter_domain_root(self):
        """Gets the document_subject_matter_domain_root of this DocumentMeta.  # noqa: E501


        :return: The document_subject_matter_domain_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_subject_matter_domain_root

    @document_subject_matter_domain_root.setter
    def document_subject_matter_domain_root(self, document_subject_matter_domain_root):
        """Sets the document_subject_matter_domain_root of this DocumentMeta.


        :param document_subject_matter_domain_root: The document_subject_matter_domain_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_subject_matter_domain_root = document_subject_matter_domain_root

    @property
    def document_subject_matter_domain_extension(self):
        """Gets the document_subject_matter_domain_extension of this DocumentMeta.  # noqa: E501


        :return: The document_subject_matter_domain_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._document_subject_matter_domain_extension

    @document_subject_matter_domain_extension.setter
    def document_subject_matter_domain_extension(self, document_subject_matter_domain_extension):
        """Sets the document_subject_matter_domain_extension of this DocumentMeta.


        :param document_subject_matter_domain_extension: The document_subject_matter_domain_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._document_subject_matter_domain_extension = document_subject_matter_domain_extension

    @property
    def facility_root(self):
        """Gets the facility_root of this DocumentMeta.  # noqa: E501


        :return: The facility_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._facility_root

    @facility_root.setter
    def facility_root(self, facility_root):
        """Sets the facility_root of this DocumentMeta.


        :param facility_root: The facility_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._facility_root = facility_root

    @property
    def facility_extension(self):
        """Gets the facility_extension of this DocumentMeta.  # noqa: E501


        :return: The facility_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._facility_extension

    @facility_extension.setter
    def facility_extension(self, facility_extension):
        """Sets the facility_extension of this DocumentMeta.


        :param facility_extension: The facility_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._facility_extension = facility_extension

    @property
    def facility_baseline_root(self):
        """Gets the facility_baseline_root of this DocumentMeta.  # noqa: E501


        :return: The facility_baseline_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._facility_baseline_root

    @facility_baseline_root.setter
    def facility_baseline_root(self, facility_baseline_root):
        """Sets the facility_baseline_root of this DocumentMeta.


        :param facility_baseline_root: The facility_baseline_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._facility_baseline_root = facility_baseline_root

    @property
    def facility_baseline_extension(self):
        """Gets the facility_baseline_extension of this DocumentMeta.  # noqa: E501


        :return: The facility_baseline_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._facility_baseline_extension

    @facility_baseline_extension.setter
    def facility_baseline_extension(self, facility_baseline_extension):
        """Sets the facility_baseline_extension of this DocumentMeta.


        :param facility_baseline_extension: The facility_baseline_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._facility_baseline_extension = facility_baseline_extension

    @property
    def visit_root(self):
        """Gets the visit_root of this DocumentMeta.  # noqa: E501


        :return: The visit_root of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._visit_root

    @visit_root.setter
    def visit_root(self, visit_root):
        """Sets the visit_root of this DocumentMeta.


        :param visit_root: The visit_root of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._visit_root = visit_root

    @property
    def visit_extension(self):
        """Gets the visit_extension of this DocumentMeta.  # noqa: E501


        :return: The visit_extension of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._visit_extension

    @visit_extension.setter
    def visit_extension(self, visit_extension):
        """Sets the visit_extension of this DocumentMeta.


        :param visit_extension: The visit_extension of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._visit_extension = visit_extension

    @property
    def provider(self):
        """Gets the provider of this DocumentMeta.  # noqa: E501


        :return: The provider of this DocumentMeta.  # noqa: E501
        :rtype: str
        """
        return self._provider

    @provider.setter
    def provider(self, provider):
        """Sets the provider of this DocumentMeta.


        :param provider: The provider of this DocumentMeta.  # noqa: E501
        :type: str
        """

        self._provider = provider

    @property
    def document_admitting_person(self):
        """Gets the document_admitting_person of this DocumentMeta.  # noqa: E501


        :return: The document_admitting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_admitting_person

    @document_admitting_person.setter
    def document_admitting_person(self, document_admitting_person):
        """Sets the document_admitting_person of this DocumentMeta.


        :param document_admitting_person: The document_admitting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_admitting_person = document_admitting_person

    @property
    def document_attending_person(self):
        """Gets the document_attending_person of this DocumentMeta.  # noqa: E501


        :return: The document_attending_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_attending_person

    @document_attending_person.setter
    def document_attending_person(self, document_attending_person):
        """Sets the document_attending_person of this DocumentMeta.


        :param document_attending_person: The document_attending_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_attending_person = document_attending_person

    @property
    def document_authenticating_person(self):
        """Gets the document_authenticating_person of this DocumentMeta.  # noqa: E501


        :return: The document_authenticating_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_authenticating_person

    @document_authenticating_person.setter
    def document_authenticating_person(self, document_authenticating_person):
        """Sets the document_authenticating_person of this DocumentMeta.


        :param document_authenticating_person: The document_authenticating_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_authenticating_person = document_authenticating_person

    @property
    def document_authoring_person(self):
        """Gets the document_authoring_person of this DocumentMeta.  # noqa: E501


        :return: The document_authoring_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_authoring_person

    @document_authoring_person.setter
    def document_authoring_person(self, document_authoring_person):
        """Sets the document_authoring_person of this DocumentMeta.


        :param document_authoring_person: The document_authoring_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_authoring_person = document_authoring_person

    @property
    def document_consulting_person(self):
        """Gets the document_consulting_person of this DocumentMeta.  # noqa: E501


        :return: The document_consulting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_consulting_person

    @document_consulting_person.setter
    def document_consulting_person(self, document_consulting_person):
        """Sets the document_consulting_person of this DocumentMeta.


        :param document_consulting_person: The document_consulting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_consulting_person = document_consulting_person

    @property
    def document_interpreting_person(self):
        """Gets the document_interpreting_person of this DocumentMeta.  # noqa: E501


        :return: The document_interpreting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_interpreting_person

    @document_interpreting_person.setter
    def document_interpreting_person(self, document_interpreting_person):
        """Sets the document_interpreting_person of this DocumentMeta.


        :param document_interpreting_person: The document_interpreting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_interpreting_person = document_interpreting_person

    @property
    def document_ordering_person(self):
        """Gets the document_ordering_person of this DocumentMeta.  # noqa: E501


        :return: The document_ordering_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_ordering_person

    @document_ordering_person.setter
    def document_ordering_person(self, document_ordering_person):
        """Sets the document_ordering_person of this DocumentMeta.


        :param document_ordering_person: The document_ordering_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_ordering_person = document_ordering_person

    @property
    def document_performing_person(self):
        """Gets the document_performing_person of this DocumentMeta.  # noqa: E501


        :return: The document_performing_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_performing_person

    @document_performing_person.setter
    def document_performing_person(self, document_performing_person):
        """Sets the document_performing_person of this DocumentMeta.


        :param document_performing_person: The document_performing_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_performing_person = document_performing_person

    @property
    def document_receiving_person(self):
        """Gets the document_receiving_person of this DocumentMeta.  # noqa: E501


        :return: The document_receiving_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_receiving_person

    @document_receiving_person.setter
    def document_receiving_person(self, document_receiving_person):
        """Sets the document_receiving_person of this DocumentMeta.


        :param document_receiving_person: The document_receiving_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_receiving_person = document_receiving_person

    @property
    def document_referring_person(self):
        """Gets the document_referring_person of this DocumentMeta.  # noqa: E501


        :return: The document_referring_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_referring_person

    @document_referring_person.setter
    def document_referring_person(self, document_referring_person):
        """Sets the document_referring_person of this DocumentMeta.


        :param document_referring_person: The document_referring_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_referring_person = document_referring_person

    @property
    def document_transcribing_person(self):
        """Gets the document_transcribing_person of this DocumentMeta.  # noqa: E501


        :return: The document_transcribing_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_transcribing_person

    @document_transcribing_person.setter
    def document_transcribing_person(self, document_transcribing_person):
        """Sets the document_transcribing_person of this DocumentMeta.


        :param document_transcribing_person: The document_transcribing_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_transcribing_person = document_transcribing_person

    @property
    def document_unknown_person(self):
        """Gets the document_unknown_person of this DocumentMeta.  # noqa: E501


        :return: The document_unknown_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._document_unknown_person

    @document_unknown_person.setter
    def document_unknown_person(self, document_unknown_person):
        """Sets the document_unknown_person of this DocumentMeta.


        :param document_unknown_person: The document_unknown_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._document_unknown_person = document_unknown_person

    @property
    def visit_admitting_person(self):
        """Gets the visit_admitting_person of this DocumentMeta.  # noqa: E501


        :return: The visit_admitting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_admitting_person

    @visit_admitting_person.setter
    def visit_admitting_person(self, visit_admitting_person):
        """Sets the visit_admitting_person of this DocumentMeta.


        :param visit_admitting_person: The visit_admitting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_admitting_person = visit_admitting_person

    @property
    def visit_attending_person(self):
        """Gets the visit_attending_person of this DocumentMeta.  # noqa: E501


        :return: The visit_attending_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_attending_person

    @visit_attending_person.setter
    def visit_attending_person(self, visit_attending_person):
        """Sets the visit_attending_person of this DocumentMeta.


        :param visit_attending_person: The visit_attending_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_attending_person = visit_attending_person

    @property
    def visit_authenticating_person(self):
        """Gets the visit_authenticating_person of this DocumentMeta.  # noqa: E501


        :return: The visit_authenticating_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_authenticating_person

    @visit_authenticating_person.setter
    def visit_authenticating_person(self, visit_authenticating_person):
        """Sets the visit_authenticating_person of this DocumentMeta.


        :param visit_authenticating_person: The visit_authenticating_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_authenticating_person = visit_authenticating_person

    @property
    def visit_authoring_person(self):
        """Gets the visit_authoring_person of this DocumentMeta.  # noqa: E501


        :return: The visit_authoring_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_authoring_person

    @visit_authoring_person.setter
    def visit_authoring_person(self, visit_authoring_person):
        """Sets the visit_authoring_person of this DocumentMeta.


        :param visit_authoring_person: The visit_authoring_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_authoring_person = visit_authoring_person

    @property
    def visit_consulting_person(self):
        """Gets the visit_consulting_person of this DocumentMeta.  # noqa: E501


        :return: The visit_consulting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_consulting_person

    @visit_consulting_person.setter
    def visit_consulting_person(self, visit_consulting_person):
        """Sets the visit_consulting_person of this DocumentMeta.


        :param visit_consulting_person: The visit_consulting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_consulting_person = visit_consulting_person

    @property
    def visit_interpreting_person(self):
        """Gets the visit_interpreting_person of this DocumentMeta.  # noqa: E501


        :return: The visit_interpreting_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_interpreting_person

    @visit_interpreting_person.setter
    def visit_interpreting_person(self, visit_interpreting_person):
        """Sets the visit_interpreting_person of this DocumentMeta.


        :param visit_interpreting_person: The visit_interpreting_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_interpreting_person = visit_interpreting_person

    @property
    def visit_ordering_person(self):
        """Gets the visit_ordering_person of this DocumentMeta.  # noqa: E501


        :return: The visit_ordering_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_ordering_person

    @visit_ordering_person.setter
    def visit_ordering_person(self, visit_ordering_person):
        """Sets the visit_ordering_person of this DocumentMeta.


        :param visit_ordering_person: The visit_ordering_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_ordering_person = visit_ordering_person

    @property
    def visit_performing_person(self):
        """Gets the visit_performing_person of this DocumentMeta.  # noqa: E501


        :return: The visit_performing_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_performing_person

    @visit_performing_person.setter
    def visit_performing_person(self, visit_performing_person):
        """Sets the visit_performing_person of this DocumentMeta.


        :param visit_performing_person: The visit_performing_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_performing_person = visit_performing_person

    @property
    def visit_receiving_person(self):
        """Gets the visit_receiving_person of this DocumentMeta.  # noqa: E501


        :return: The visit_receiving_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_receiving_person

    @visit_receiving_person.setter
    def visit_receiving_person(self, visit_receiving_person):
        """Sets the visit_receiving_person of this DocumentMeta.


        :param visit_receiving_person: The visit_receiving_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_receiving_person = visit_receiving_person

    @property
    def visit_referring_person(self):
        """Gets the visit_referring_person of this DocumentMeta.  # noqa: E501


        :return: The visit_referring_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_referring_person

    @visit_referring_person.setter
    def visit_referring_person(self, visit_referring_person):
        """Sets the visit_referring_person of this DocumentMeta.


        :param visit_referring_person: The visit_referring_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_referring_person = visit_referring_person

    @property
    def visit_transcribing_person(self):
        """Gets the visit_transcribing_person of this DocumentMeta.  # noqa: E501


        :return: The visit_transcribing_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_transcribing_person

    @visit_transcribing_person.setter
    def visit_transcribing_person(self, visit_transcribing_person):
        """Sets the visit_transcribing_person of this DocumentMeta.


        :param visit_transcribing_person: The visit_transcribing_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_transcribing_person = visit_transcribing_person

    @property
    def visit_unknown_person(self):
        """Gets the visit_unknown_person of this DocumentMeta.  # noqa: E501


        :return: The visit_unknown_person of this DocumentMeta.  # noqa: E501
        :rtype: list[Person]
        """
        return self._visit_unknown_person

    @visit_unknown_person.setter
    def visit_unknown_person(self, visit_unknown_person):
        """Sets the visit_unknown_person of this DocumentMeta.


        :param visit_unknown_person: The visit_unknown_person of this DocumentMeta.  # noqa: E501
        :type: list[Person]
        """

        self._visit_unknown_person = visit_unknown_person

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DocumentMeta, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DocumentMeta):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
